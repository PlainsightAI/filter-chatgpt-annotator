services:
  video_in:
    image: containers.openfilter.io/plainsightai/openfilter-video-in:v0.1.10
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-}
      FILTER_ID: VideoIn
      FILTER_SOURCES: file:///video.mp4!sync!no-loop
      FILTER_OUTPUTS: tcp://*
    volumes:
      - ${VIDEO_PATH:-./data/sample-video.mp4}:/video.mp4:ro

  chatgpt_annotator_filter:
    build:
      context: .
      dockerfile: Dockerfile.local
    image: docker.io/library/filter-chatgpt-annotator:local
    pull_policy: never
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-}
      FILTER_ID: ChatgptAnnotatorFilter
      FILTER_SOURCES: tcp://video_in
      FILTER_OUTPUTS: tcp://*
      FILTER_MQ_LOG: pretty
      FILTER_CHATGPT_API_KEY: ${FILTER_CHATGPT_API_KEY}
      FILTER_PROMPT: ${FILTER_PROMPT:-/prompts/salad_prompt_multilabel_class_demo.txt}
      FILTER_CHATGPT_MODEL: ${FILTER_CHATGPT_MODEL:-gpt-4o-mini}
      FILTER_MAX_TOKENS: ${FILTER_MAX_TOKENS:-1000}
      FILTER_TEMPERATURE: ${FILTER_TEMPERATURE:-0.1}
      FILTER_MAX_IMAGE_SIZE: ${FILTER_MAX_IMAGE_SIZE:-512}
      FILTER_SAVE_FRAMES: ${FILTER_SAVE_FRAMES:-true}
      FILTER_RECURSIVE: ${FILTER_RECURSIVE:-false}
      FILTER_CONFIDENCE_THRESHOLD: ${FILTER_CONFIDENCE_THRESHOLD:-0.7}
      FILTER_OUTPUT_DIR: ${FILTER_OUTPUT_DIR:-/output_frames}
      FILTER_OUTPUT_SCHEMA: '{"avocado":{"present":false,"confidence":0.0,"bbox":null},"boiled eggs":{"present":false,"confidence":0.0,"bbox":null},"fish":{"present":false,"confidence":0.0,"bbox":null}}'
    volumes:
      - ./prompts:/prompts:ro
      - ${FILTER_OUTPUT_DIR:-./output_frames}:/output_frames

  webvis:
    image: containers.openfilter.io/plainsightai/openfilter-webvis:v0.1.10
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-}
      FILTER_ID: Webvis
      FILTER_SOURCES: tcp://chatgpt_annotator_filter
    ports:
      - 8001:8000